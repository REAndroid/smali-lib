
apply plugin: 'antlr'
apply plugin: 'org.xbib.gradle.plugin.jflex'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath depends.jflex_plugin
    }
}

configurations {
    // Remove the full antlr library that's added by the antlr plugin. We manually
    // add the smaller antlr_runtime library instead
    implementation.exclude group: 'org.antlr', module: 'antlr'
}

sourceSets {
    main {
        resources {
            // This adds the generated .tokens files to the jar
            srcDir 'build/generated-src/antlr/main'
        }
    }
}

idea {
    module {
        excludeDirs -= buildDir
        if (buildDir.exists()) {
            excludeDirs.addAll(buildDir.listFiles())
        }
        for (sourceDir in (sourceDirs + testSourceDirs)) {
            excludeDirs.remove(sourceDir);
            while ((sourceDir = sourceDir.getParentFile()) != null) {
                excludeDirs.remove(sourceDir);
            }
        }
    }
}

dependencies {
    implementation project(':util')
    api project(':dexlib2')
    implementation project(':baksmali')
    implementation depends.antlr_runtime
    implementation depends.jcommander
    implementation depends.stringtemplate

    testImplementation depends.junit

    antlr depends.antlr
}

processResources.inputs.property('version', version)
processResources.expand('version': version)
processResources.configure {
    // Necessary on Gradle 7 to eplicitly set dependency
    dependsOn generateGrammarSource
}

// Build a separate jar that contains all dependencies
task fatJar(type: Jar, dependsOn: jar) {
    from sourceSets.main.output
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

    archiveClassifier = 'fat'

    manifest {
        attributes('Main-Class': 'org.jf.smali.Main')
    }

    doLast {
        if (!System.getProperty('os.name').toLowerCase().contains('windows')) {
            ant.symlink(link: file("${destinationDirectory.get()}/smali.jar"), resource: archivePath, overwrite: true)
        }
    }

    // Necessary on Gradle 7 to eplicitly set dependency
    dependsOn project(':util').jar
    dependsOn project(':dexlib2').jar
    dependsOn project(':baksmali').jar
}
tasks.getByPath('build').dependsOn(fatJar)

generateTestGrammarSource {
    outputDirectory = new File(outputDirectory, 'org/jf/smali')
}

generateGrammarSource {
    outputDirectory = new File(outputDirectory, 'org/jf/smali')
}

jflex {
    generateDir = new File(generateDir, 'org/jf/smali')
}

